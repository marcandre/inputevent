{"version":3,"sources":["inputevent.js","src/inputevent.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAPA,AAAC,CAAA,UAAU,MAAM,EAAE,OAAO,EAAE;AAC1B,SAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAC1G,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,GACxE,MAAM,CAAC,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;CACtC,CAAA,YAAO,UAAU,CAAC,EAAE;AAAE,cAAY,CAAC;;ACFpC,WAAS,UAAA,GAAa;;;AACpB,QAAI,OAAA,GAAU,MAAA,IAAU,MAAA,CAAA;;;;AAIxB,KAAA,CAAE,MAAA,CAAO,IAAA,EAAM;;;AAGb,mBAAA,EAAe,uBAAA,GAAA,EAAO;AACpB,eAAO,GAAA,CAAI,aAAA,IAAiB,GAAA,CAAI,aAAA,CAAc,SAAA,KAAc,KAAA,CAAA;OAClE;;AAEI,oBAAA,EAAgB,wBAAA,GAAA,EAAO;AACrB,YAAI,MAAK,aAAA,CAAc,GAAA,CAAA,EAAM;AAC3B,WAAA,CAAE,GAAA,CAAI,MAAA,CAAA,CAAQ,OAAA,CAAQ,OAAA,CAAA,CAAA;SAC9B;OACA;;AAEI,gBAAA,EAAY,oBAAA,GAAA,EAAO;AACjB,YAAI,MAAK,aAAA,CAAc,GAAA,CAAA,EAAM;AAC3B,gBAAK,SAAA,CAAU,GAAA,CAAA,CAAA;AACf,WAAA,CAAE,QAAA,CAAA,CACC,EAAA,CAAG,mBAAA,EAAqB,GAAA,CAAI,IAAA,CAAK,QAAA,EAAU,MAAK,cAAA,CAAA,CAAA;AACnD,gBAAK,cAAA,CAAe,GAAA,CAAA,CAAA;SAC5B;OACA;;AAEI,eAAA,EAAW,mBAAA,GAAA,EAAO;AAChB,YAAI,MAAK,aAAA,CAAc,GAAA,CAAA,EAAM;AAC3B,WAAA,CAAE,QAAA,CAAA;WACC,GAAA,CAAI,kBAAA,EAAoB,GAAA,CAAI,IAAA,CAAK,QAAA,EAAU,MAAK,SAAA,CAAA,CAChD,GAAA,CAAI,mBAAA,EAAqB,GAAA,CAAI,IAAA,CAAK,QAAA,EAAU,MAAK,UAAA,CAAA,CAAA;SAC5D;OACA;;;AAGI,aAAA,EAAS,mBAAM;AACb,YAAI,OAAA,CAAQ,iBAAA,EAAmB;AAC7B,iBAAA;SACR;AACM,eAAA,CAAQ,iBAAA,GAAoB,OAAA,CAAA;mBACP,CAAC,QAAA,EAAU,wBAAA,EAA0B,qBAAA,EAAuB,oBAAA,CAAA;AAAjF,iDAAwG;AAAnG,cAAI,QAAA,WAAA,CAAA;AACP,WAAA,CAAE,QAAA,CAAA,CACC,EAAA,CAAG,kBAAA,EAAoB,QAAA,EAAU,EAAC,QAAA,EAAA,QAAA,EAAA,EAAW,MAAK,SAAA,CAAA,CAClD,EAAA,CAAG,mBAAA,EAAqB,QAAA,EAAU,EAAC,QAAA,EAAA,QAAA,EAAA,EAAW,MAAK,UAAA,CAAA,CAAA;SAC9D;OACA;;AAEI,eAAA,EAAW,qBAAM;AACf,eAAO,OAAA,CAAQ,iBAAA,CAAA;AACf,SAAA,CAAE,QAAA,CAAA,CAAU,GAAA,CAAI,aAAA,CAAA,CAAA;OACtB;;KAEA,CAAA,CAAA;GACC,CAAA;;AAxDD,MAAA,UAAA,GA0De,IAAI,UAAA,EAAA,CAAA;;ADMjB,SAAO,UAAU,CAAC;CAEnB,CAAC,CAAE","file":"inputevent.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('jquery')) :\n  typeof define === 'function' && define.amd ? define(['jquery'], factory) :\n  global.inputevent = factory(global.$)\n}(this, function ($) { 'use strict';\n\n  function InputEvent() {\n    let globals = window || global;\n\n    // Slightly odd way construct our object. This way methods are force bound.\n    // Used to test for duplicate library.\n    $.extend(this, {\n\n      // For browsers that do not support isTrusted, assumes event is native.\n      isNativeEvent: evt => {\n        return evt.originalEvent && evt.originalEvent.isTrusted !== false;\n      },\n\n      fakeInputEvent: evt => {\n        if (this.isNativeEvent(evt)) {\n          $(evt.target).trigger('input');\n        }\n      },\n\n      misbehaves: evt => {\n        if (this.isNativeEvent(evt)) {\n          this.behavesOk(evt);\n          $(document)\n            .on('change.inputevent', evt.data.selector, this.fakeInputEvent);\n          this.fakeInputEvent(evt);\n        }\n      },\n\n      behavesOk: evt => {\n        if (this.isNativeEvent(evt)) {\n          $(document) // Simply unbinds the testing handler\n            .off('input.inputevent', evt.data.selector, this.behavesOk)\n            .off('change.inputevent', evt.data.selector, this.misbehaves);\n        }\n      },\n\n      // Bind the testing handlers\n      install: () => {\n        if (globals.inputEventPatched) {\n          return;\n        }\n        globals.inputEventPatched = '0.0.3';\n        for (let selector of ['select', 'input[type=\"checkbox\"]', 'input[type=\"radio\"]', 'input[type=\"file\"]']) {\n          $(document)\n            .on('input.inputevent', selector, {selector}, this.behavesOk)\n            .on('change.inputevent', selector, {selector}, this.misbehaves);\n        }\n      },\n\n      uninstall: () => {\n        delete globals.inputEventPatched;\n        $(document).off('.inputevent');\n      }\n\n    });\n  };\n\n  var inputevent = new InputEvent();\n\n  return inputevent;\n\n}));\n","import $ from 'jquery';\n\nfunction InputEvent() {\n  let globals = window || global;\n\n  // Slightly odd way construct our object. This way methods are force bound.\n  // Used to test for duplicate library.\n  $.extend(this, {\n\n    // For browsers that do not support isTrusted, assumes event is native.\n    isNativeEvent: evt => {\n      return evt.originalEvent && evt.originalEvent.isTrusted !== false;\n    },\n\n    fakeInputEvent: evt => {\n      if (this.isNativeEvent(evt)) {\n        $(evt.target).trigger('input');\n      }\n    },\n\n    misbehaves: evt => {\n      if (this.isNativeEvent(evt)) {\n        this.behavesOk(evt);\n        $(document)\n          .on('change.inputevent', evt.data.selector, this.fakeInputEvent);\n        this.fakeInputEvent(evt);\n      }\n    },\n\n    behavesOk: evt => {\n      if (this.isNativeEvent(evt)) {\n        $(document) // Simply unbinds the testing handler\n          .off('input.inputevent', evt.data.selector, this.behavesOk)\n          .off('change.inputevent', evt.data.selector, this.misbehaves);\n      }\n    },\n\n    // Bind the testing handlers\n    install: () => {\n      if (globals.inputEventPatched) {\n        return;\n      }\n      globals.inputEventPatched = '0.0.3';\n      for (let selector of ['select', 'input[type=\"checkbox\"]', 'input[type=\"radio\"]', 'input[type=\"file\"]']) {\n        $(document)\n          .on('input.inputevent', selector, {selector}, this.behavesOk)\n          .on('change.inputevent', selector, {selector}, this.misbehaves);\n      }\n    },\n\n    uninstall: () => {\n      delete globals.inputEventPatched;\n      $(document).off('.inputevent');\n    }\n\n  });\n};\n\nexport default new InputEvent();\n"],"sourceRoot":"/source/"}